{"ast":null,"code":"var _jsxFileName = \"/Users/whl/ironhack/dating-apes/\\u6700\\u65B0/dating-apes/client/src/utils/ConvertZodiac.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ConvertZodiac(_ref) {\n  _s();\n\n  let {\n    birthday\n  } = _ref;\n  const [zodic, setZodic] = useState('');\n\n  function findZodic(date) {\n    const month = Number(date.slice(5, 7));\n    const day = Number(date.slice(8, 10));\n    const convertCode = month * 1000 + day;\n    return convertCode >= 1021 && convertCode <= 2019 ? 'Aquarius' : convertCode >= 2020 && convertCode <= 3020 ? 'Pisces' : convertCode >= 3021 && convertCode <= 4019 ? 'Aries' : convertCode >= 4020 && convertCode <= 5020 ? 'Taurus' : convertCode >= 5021 && convertCode <= 6021 ? 'Gemini' : convertCode >= 6022 && convertCode <= 7022 ? 'Cancer' : convertCode >= 7023 && convertCode <= 8022 ? 'Leo' : convertCode >= 8023 && convertCode <= 9022 ? 'Virgo' : convertCode >= 9023 && convertCode <= 10023 ? 'Libra' : convertCode >= 10024 && convertCode <= 11021 ? 'Scorpio' : convertCode >= 11022 && convertCode <= 12020 ? 'Sagittarius' : convertCode >= 12022 && convertCode <= 1020 ? 'Capricorn' : void 0;\n  }\n\n  useState(() => {\n    setZodic(findZodic(birthday.toString()));\n  }, [birthday]);\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"| \", zodic]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 12\n  }, this);\n}\n\n_s(ConvertZodiac, \"8tk0AX3cNWr6ys/Njm1PgTABhYs=\");\n\n_c = ConvertZodiac;\nexport default ConvertZodiac;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConvertZodiac\");","map":{"version":3,"names":["useState","ConvertZodiac","birthday","zodic","setZodic","findZodic","date","month","Number","slice","day","convertCode","toString"],"sources":["/Users/whl/ironhack/dating-apes/最新/dating-apes/client/src/utils/ConvertZodiac.js"],"sourcesContent":["import { useState } from 'react';\n\nfunction ConvertZodiac({ birthday }) {\n    const [zodic, setZodic] = useState('');\n    function findZodic(date) {\n        const month = Number(date.slice(5, 7));\n        const day = Number(date.slice(8, 10));\n        const convertCode = (month * 1000) + day\n        return (\n            convertCode >= 1021 && convertCode <= 2019 ? 'Aquarius' :\n                convertCode >= 2020 && convertCode <= 3020 ? 'Pisces' :\n                    convertCode >= 3021 && convertCode <= 4019 ? 'Aries' :\n                        convertCode >= 4020 && convertCode <= 5020 ? 'Taurus' :\n                            convertCode >= 5021 && convertCode <= 6021 ? 'Gemini' :\n                                convertCode >= 6022 && convertCode <= 7022 ? 'Cancer' :\n                                    convertCode >= 7023 && convertCode <= 8022 ? 'Leo' :\n                                        convertCode >= 8023 && convertCode <= 9022 ? 'Virgo' :\n                                            convertCode >= 9023 && convertCode <= 10023 ? 'Libra' :\n                                                convertCode >= 10024 && convertCode <= 11021 ? 'Scorpio' :\n                                                    convertCode >= 11022 && convertCode <= 12020 ? 'Sagittarius' :\n                                                        convertCode >= 12022 && convertCode <= 1020 ? 'Capricorn' :\n                                                            void 0)\n    }\n    useState(() => {\n        setZodic(findZodic(birthday.toString()));\n    }, [birthday]);\n    return <p>| {zodic}</p>;\n}\n\nexport default ConvertZodiac;\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,SAASC,aAAT,OAAqC;EAAA;;EAAA,IAAd;IAAEC;EAAF,CAAc;EACjC,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;;EACA,SAASK,SAAT,CAAmBC,IAAnB,EAAyB;IACrB,MAAMC,KAAK,GAAGC,MAAM,CAACF,IAAI,CAACG,KAAL,CAAW,CAAX,EAAc,CAAd,CAAD,CAApB;IACA,MAAMC,GAAG,GAAGF,MAAM,CAACF,IAAI,CAACG,KAAL,CAAW,CAAX,EAAc,EAAd,CAAD,CAAlB;IACA,MAAME,WAAW,GAAIJ,KAAK,GAAG,IAAT,GAAiBG,GAArC;IACA,OACIC,WAAW,IAAI,IAAf,IAAuBA,WAAW,IAAI,IAAtC,GAA6C,UAA7C,GACIA,WAAW,IAAI,IAAf,IAAuBA,WAAW,IAAI,IAAtC,GAA6C,QAA7C,GACIA,WAAW,IAAI,IAAf,IAAuBA,WAAW,IAAI,IAAtC,GAA6C,OAA7C,GACIA,WAAW,IAAI,IAAf,IAAuBA,WAAW,IAAI,IAAtC,GAA6C,QAA7C,GACIA,WAAW,IAAI,IAAf,IAAuBA,WAAW,IAAI,IAAtC,GAA6C,QAA7C,GACIA,WAAW,IAAI,IAAf,IAAuBA,WAAW,IAAI,IAAtC,GAA6C,QAA7C,GACIA,WAAW,IAAI,IAAf,IAAuBA,WAAW,IAAI,IAAtC,GAA6C,KAA7C,GACIA,WAAW,IAAI,IAAf,IAAuBA,WAAW,IAAI,IAAtC,GAA6C,OAA7C,GACIA,WAAW,IAAI,IAAf,IAAuBA,WAAW,IAAI,KAAtC,GAA8C,OAA9C,GACIA,WAAW,IAAI,KAAf,IAAwBA,WAAW,IAAI,KAAvC,GAA+C,SAA/C,GACIA,WAAW,IAAI,KAAf,IAAwBA,WAAW,IAAI,KAAvC,GAA+C,aAA/C,GACIA,WAAW,IAAI,KAAf,IAAwBA,WAAW,IAAI,IAAvC,GAA8C,WAA9C,GACI,KAAK,CAbzD;EAcH;;EACDX,QAAQ,CAAC,MAAM;IACXI,QAAQ,CAACC,SAAS,CAACH,QAAQ,CAACU,QAAT,EAAD,CAAV,CAAR;EACH,CAFO,EAEL,CAACV,QAAD,CAFK,CAAR;EAGA,oBAAO;IAAA,iBAAMC,KAAN;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;AACH;;GAzBQF,a;;KAAAA,a;AA2BT,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}